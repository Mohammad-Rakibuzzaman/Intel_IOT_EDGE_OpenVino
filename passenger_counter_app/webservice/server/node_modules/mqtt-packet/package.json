{
  "_args": [
    [
      {
        "raw": "mqtt-packet@^3.4.7",
        "scope": null,
        "escapedName": "mqtt-packet",
        "name": "mqtt-packet",
        "rawSpec": "^3.4.7",
        "spec": ">=3.4.7 <4.0.0",
        "type": "range"
      },
      "/home/redone/peoples counters/passenger_counter_app/webservice/server/node_modules/mqtt"
    ]
  ],
  "_from": "mqtt-packet@>=3.4.7 <4.0.0",
  "_hasShrinkwrap": false,
  "_id": "mqtt-packet@3.5.1",
  "_inCache": true,
  "_location": "/mqtt-packet",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mqtt-packet_3.5.1_1555542725531_0.07836203368900096"
  },
  "_npmUser": {
    "name": "matteo.collina",
    "email": "hello@matteocollina.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mqtt-packet@^3.4.7",
    "scope": null,
    "escapedName": "mqtt-packet",
    "name": "mqtt-packet",
    "rawSpec": "^3.4.7",
    "spec": ">=3.4.7 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mqtt",
    "/mqtt-connection"
  ],
  "_resolved": "https://registry.npmjs.org/mqtt-packet/-/mqtt-packet-3.5.1.tgz",
  "_shasum": "49b3688478ca3325fe45841fad7c88bc31042aeb",
  "_shrinkwrap": null,
  "_spec": "mqtt-packet@^3.4.7",
  "_where": "/home/redone/peoples counters/passenger_counter_app/webservice/server/node_modules/mqtt",
  "bugs": {
    "url": "https://github.com/mqttjs/mqtt-packet/issues"
  },
  "contributors": [
    {
      "name": "Matteo Collina",
      "email": "matteo.collina@gmail.com",
      "url": "https://github.com/mcollina"
    },
    {
      "name": "Adam Rudd",
      "email": "damvrr@gmail.com"
    }
  ],
  "dependencies": {
    "bl": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "description": "Parse and generate MQTT packets like a breeze",
  "devDependencies": {
    "faucet": "0.0.1",
    "pre-commit": "^1.1.1",
    "tape": "^4.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-9mHaa4MltqT/VEzeO/3iAqduao/aCzx4qcC3SyXi0FPd3AFJ7lDeBUMsKaTQw0wWX7rLCQbClKOsuCURaii+ww==",
    "shasum": "49b3688478ca3325fe45841fad7c88bc31042aeb",
    "tarball": "https://registry.npmjs.org/mqtt-packet/-/mqtt-packet-3.5.1.tgz",
    "fileCount": 14,
    "unpackedSize": 58818,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJct7LGCRA9TVsSAnZWagAA/ncP/3A2tHW7200+UdLZXh6W\nHXTR66hQaZrRXMdfAp/MJYp9E7O1dXPeeB1a/nr0EcgYKdCVfs/KZhkdrMCO\nJ+WJqB6NDV4p2iwB9m+VWtb+ZJZO2Bf6hcPzZTOVb6mThcsSYYLS7cUXtabC\nDXC7U2hdOTKSD3LiSTnMAHjPFXm8NNxPcM/ZKyV6QI7LSpN1PycLXUTHA7Ro\nGrR1Kf0p4ia0pHhBLISwfjzENKEfAZI4Swcn3o+LWs7mSzykJCxahc3e8aXC\nn1UzqphjLNszqvESTF/QjtOg/HaICKgd3U2BdbnXpwfgFSKRHpKz+Awmasnv\nrDpXG0QfUy5WullZNw11medY/kyPWn4ZfC27K23c+uyWeP7hHyeQ4a8spCXS\nXL1cVxIgSPQYbVt+U8jB/b/QAxTKkofVFeWGL5jz4zdUE+ZmvWygOR8ASgJT\nSUR9J7HfEo79zNlzOw3E+wuCycLf2ZuD33hIUhXrkteRSoZngVqug7KsN+8H\nDdTRmIWMMPrgP6/ltttRNIUIaYRV7Tya1YvApocT1H3p722yuQrSKheWD/uM\nmmwmVwYa/zDCm1MxSW1yeN2K1uIdHz5/01wTdi6sdBrK3s5gyLkuNVdbjJG/\n9ju9cK5TEgSKn4ZzcIbKnfEb+kZ9z165Jk/famx/Mc3vifuhgVORkVaqSymY\nLHzO\r\n=XQxU\r\n-----END PGP SIGNATURE-----\r\n",
    "signatures": [
      {
        "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
        "sig": "MEQCIEDFXQD6F+J7Ow7GHRoquIktWEY60hYjAflRZUl9s1OqAiB/11Jmwtimw0MvOk5I/K0qS6XbrDRcUN1/IrPSMeyi5w=="
      }
    ]
  },
  "gitHead": "50e38e47ea1424e8d30637560bb1d92d17cc4a71",
  "homepage": "https://github.com/mqttjs/mqtt-packet",
  "keywords": [
    "MQTT",
    "packet",
    "parse",
    "publish",
    "subscribe",
    "pubsub"
  ],
  "license": "MIT",
  "main": "mqtt.js",
  "maintainers": [
    {
      "name": "matteo.collina",
      "email": "hello@matteocollina.com"
    },
    {
      "name": "wuhkuh",
      "email": "contact@wuhkuh.com"
    }
  ],
  "name": "mqtt-packet",
  "optionalDependencies": {},
  "pre-commit": "test",
  "readme": "mqtt-packet&nbsp;&nbsp;&nbsp;[![Build Status](https://travis-ci.org/mqttjs/mqtt-packet.png)](https://travis-ci.org/mqttjs/mqtt-packet)\n===========\n\nEncode and Decode MQTT 3.1.1 packets the node way.\n\n  * <a href=\"#install\">Install</a>\n  * <a href=\"#examples\">Examples</a>\n  * <a href=\"#packets\">Packets</a>\n  * <a href=\"#api\">API</a>\n  * <a href=\"#contributing\">Contributing</a>\n  * <a href=\"#license\">Licence &amp; copyright</a>\n\nThis library works with node v4.x, v0.12.x, v0.10.x and node v0.8.x and all iojs releases, but it requires at\nleast NPM 1.4. To upgrade NPM on node v0.8, run `npm install\nnpm@1.4.28 -g`.\n\nInstall\n------------\n\n```bash\nnpm install mqtt-packet --save\n```\n\nExamples\n--------\n\n### Generating\n\n```js\nvar mqtt    = require('mqtt-packet')\n  , object  = {\n        cmd: 'publish'\n      , retain: false\n      , qos: 0\n      , dup: false\n      , length: 10\n      , topic: 'test'\n      , payload: 'test' // can also be a Buffer\n    }\n\nconsole.log(mqtt.generate(object))\n// prints\n// <Buffer 30 0a 00 04 74 65 73 74 74 65 73 74>\n//\n// the same as\n//\n// new Buffer([\n//   48, 10, // Header\n//   0, 4, // Topic length\n//   116, 101, 115, 116, // Topic (test)\n//   116, 101, 115, 116 // Payload (test)\n// ])\n```\n\n### Parsing\n\n```js\nvar mqtt      = require('mqtt-packet')\n  , parser    = mqtt.parser()\n\n// synchronously emits all the parsed packets\nparser.on('packet', function(packet) {\n  console.log(packet)\n  // prints:\n  //\n  // {\n  //     cmd: 'publish'\n  //   , retain: false\n  //   , qos: 0\n  //   , dup: false\n  //   , length: 10\n  //   , topic: 'test'\n  //   , payload: <Buffer 74 65 73 74>\n  // }\n})\n\nparser.parse(new Buffer([\n  48, 10, // Header\n  0, 4, // Topic length\n  116, 101, 115, 116, // Topic (test)\n  116, 101, 115, 116 // Payload (test)\n])\n// returns the number of bytes left in the parser\n```\n\nAPI\n---\n\n  * <a href=\"#generate\"><code>mqtt#<b>generate()</b></code></a>\n  * <a href=\"#parser\"><code>mqtt#<b>parser()</b></code></a>\n\n<a name=\"generate\">\n### mqtt.generate(object)\n\nGenerates a `Buffer` containing an MQTT packet.\nThe object must be one of the ones specified by the [packets](#packets)\nsection. Throws an `Error` if a packet cannot be generated.\n\n<a name=\"parser\">\n### mqtt.parser()\n\nReturns a new `Parser` object. `Parser` inherits from `EventEmitter` and\nwill emit:\n\n  * `packet`, when a new packet is parsed, according to\n    [packets](#packets)\n  * `error`, if an error happens\n\n<a name=\"parse\">\n#### Parser.parse(buffer)\n\nParse a given `Buffer` and emits synchronously all the MQTT packets that\nare included. Returns the number of bytes left to parse.\n\nIf an error happens, an `error` event will be emitted, but no `packet` events\nwill be emitted after that. Calling `parse()` again clears the error and\nprevious buffer as if you created a new `Parser`.\n\nPackets\n-------\n\nThis section describes the format of all packets emitted by the `Parser`\nand that you can input to `generate`.\n\n### Connect\n\n```js\n{\n    cmd: 'connect'\n  , protocolId: 'MQTT' // or 'MQIsdp' in MQTT 3.1.1\n  , protocolVersion: 4 // or 3 in MQTT 3.1\n  , clean: true // or false\n  , clientId: 'my-device'\n  , keepalive: 0 // seconds, 0 is the default, can be any positive number\n  , username: 'matteo'\n  , password: new Buffer('collina') // passwords are buffers\n  , will: {\n        topic: 'mydevice/status'\n      , payload: new Buffer('dead') // payloads are buffers\n    }\n}\n```\n\nIf `protocolVersion` is 3, `clientId` is mandatory and `generate` will throw if\nmissing.\n\nIf `password` or `will.payload` are passed as strings, they will\nautomatically be converted into a `Buffer`.\n\n### Connack\n\n```js\n{\n    cmd: 'connack'\n  , returnCode: 0 // or whatever else you see fit\n  , sessionPresent: false // or true.\n}\n```\n\nThe only mandatory argument is `returnCode`, as `generate` will throw if\nmissing.\n\n### Subscribe\n\n```js\n{\n    cmd: 'subscribe'\n  , messageId: 42\n  , subscriptions: [{\n        topic: 'test'\n      , qos: 0\n    }]\n}\n```\n\nAll properties are mandatory.\n\n### Suback\n\n```js\n{\n    cmd: 'suback'\n  , messageId: 42\n  , granted: [0, 1, 2, 128]\n}\n```\n\nAll the granted qos __must__ be < 256, as they are encoded as UInt8.\nAll properties are mandatory.\n\n### Unsubscribe\n\n```js\n{\n    cmd: 'unsubscribe'\n  , messageId: 42\n  , unsubscriptions: [\n        'test'\n      , 'a/topic'\n    ]\n}\n```\n\nAll properties are mandatory.\n\n### Unsuback\n\n```js\n{\n    cmd: 'unsuback'\n  , messageId: 42\n}\n```\n\nAll properties are mandatory.\n\n### Publish\n\n```js\n{\n    cmd: 'publish'\n  , messageId: 42\n  , qos: 2\n  , dup: false\n  , topic: 'test'\n  , payload: new Buffer('test')\n  , retain: false\n}\n```\n\nOnly the `topic` and properties are mandatory\nBoth `topic` and `payload` can be `Buffer` objects instead of strings.\n`messageId` is mandatory for `qos > 0`.\n\nIf `payload` is passed to `generate(packet)` as a string, it will be\nautomatically converted into a `Buffer`.\n\n### Puback\n\n```js\n{\n    cmd: 'puback'\n  , messageId: 42\n}\n```\n\nThe only mandatory argument is `messageId`, as `generate` will throw if\nmissing.\n\n### Pubrec\n\n```js\n{\n    cmd: 'pubcomp'\n  , messageId: 42\n}\n```\n\nThe only mandatory argument is `messageId`, as `generate` will throw if\nmissing.\n\n### Pubrel\n\n```js\n{\n    cmd: 'pubrel'\n  , messageId: 42\n}\n```\n\nThe only mandatory argument is `messageId`, as `generate` will throw if\nmissing.\n\n### Pubcomp\n\n```js\n{\n    cmd: 'pubcomp'\n  , messageId: 42\n}\n```\n\nThe only mandatory argument is `messageId`, as `generate` will throw if\nmissing.\n\n### Pingreq\n\n```js\n{\n  cmd: 'pingreq'\n}\n```\n\n### Pingresp\n\n```js\n{\n  cmd: 'pingresp'\n}\n```\n\n### Disconnect\n\n```js\n{\n  cmd: 'pingresp'\n}\n```\n\n<a name=\"contributing\"></a>\nContributing\n------------\n\nmqtt-packet is an **OPEN Open Source Project**. This means that:\n\n> Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\nSee the [CONTRIBUTING.md](https://github.com/mqttjs/mqtt-packet/blob/master/CONTRIBUTING.md) file for more details.\n\n### Contributors\n\nmqtt-packet is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align=\"left\">Matteo Collina</th><td><a href=\"https://github.com/mcollina\">GitHub/mcollina</a></td><td><a href=\"http://twitter.com/matteocollina\">Twitter/@matteocollina</a></td></tr>\n<tr><th align=\"left\">Adam Rudd</th><td><a href=\"https://github.com/adamvr\">GitHub/adamvr</a></td><td><a href=\"http://twitter.com/adam_vr\">Twitter/@adam_vr</a></td></tr>\n</tbody></table>\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mqttjs/mqtt-packet.git"
  },
  "scripts": {
    "ci": "tape test.js && node testRandom",
    "test": "tape test.js | faucet"
  },
  "version": "3.5.1"
}
